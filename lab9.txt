Тема: 
	Калькулятор. Веб-формы и база данных (ADO.NET).

Время на выполнение: 
	3 дня.

Задание:
	1. Перейти в локальный репозиторий и создать ветку от main с наименованием по шаблону <наименование_работы>_<номер_студенческого_билета>.
	2. Перейти в каталог студента и открыть решение BUKEP.Student.
	3. Создать в решении новый проект типа Class Library с наименованием BUKEP.Student.Calculator.Data.
	4. В проекте BUKEP.Student.WebFormsCalculator в каталоге App_Data создать локальное хранилище с реляционной базой данных.
	5. В проекте BUKEP.Student.WebFormsCalculator в файл Web.config добавить строку подключения к базе данных.
	6. В базе данных создать таблицу для хранения результатов вычисления. Таблица по меньшей мере должна иметь поля Id и Value.
	7. В проекте BUKEP.Student.Calculator.Data реализовать класс результата вычисления и класс доступа к результатам вычисления.
В классе доступа должны быть реализованы методы сохранения данных, получения данных, очистки данных. Доступ к базе данных должен выполнятся 
по средствам использования технологии ADO.NET. Класс доступа к результатам вычисления должен иметь конструктор с параметром - строка подключения.
	8. В проекте BUKEP.Student.WebFormsCalculator на форму калькулятора добавить 4 кнопки. [M] - для сохранения результата,
[S>] - для получения следующего результата, [<S] - для получения предыдущего результата, [MC] - для очистки всех результатов вычисления. 
Примерный интерфейс (UI) представлен в файле lab9-ui.png
	9. В проекте BUKEP.Student.WebFormsCalculator добавить ссылку на проект BUKEP.Student.Calculator.Data и выполнить реализацию функционала
сохранения и получения результатов вычисления.
	10. Выполнить синхронизацию изменений локального репозитория в удаленный.
	11. Создать pull request в ветку main.
	12. По завершению предоставить ссылку на pull request.
	13. После получения согласования вашего pull request выполнить его сливание в ветку main c использованием параметра squash (для исключения промежуточных commits).
	Сливание pull request выполняется по кнопке из интерфейса вашей системы контроля версий кода (например, GitHub, GitLab).

Критерии выполнения:
	Пройти по предоставленной ссылки и провести code review. Проверить работоспособность приложения на нескольких контрольных примерах.
Проверить поведение приложения при некорректном вводе выражений/операций.

Ссылки для самостоятельного изучения:
https://metanit.com/sharp/adonet/
https://learn.microsoft.com/ru-ru/visualstudio/data-tools/create-a-sql-database-by-using-a-designer?view=vs-2022
https://metanit.com/sharp/mvc/5.2.php

Пример тестового случая:
1. Пользователь запускает приложение -> Открывается веб приложение Калькулятор.
2. Пользователь задает выражение 2+2 и нажимает кнопку [=] -> В поле результата отображается значение 4.
3. Пользователь нажимает кнопку [M] -> Визуально ничего не происходит. Приложение выполняет сохранение результата в БД.
4. Пользователь выполняет вычисление нового выражения, например, 2*3 -> В поле результата отображается значение 6.
5. Пользователь нажимает кнопку [M] -> Визуально ничего не происходит. Приложение выполняет сохранение результата в БД.
6. Пользователь нажимает кнопку [<S] или [S>] -> В поле результата отображается значение 6.
7. Пользователь нажимает кнопку [<S] -> В поле результата отображается значение 4.
8. Пользователь нажимает кнопку [S>] -> В поле результата отображается значение 6.
9. Пользователь нажимает кнопку [MC] -> В поле результата отображается значение 0 или пусто. 
10. Пользователь нажимает кнопку [<S] или [S>] -> В поле результата отображается значение 0 или пусто.



